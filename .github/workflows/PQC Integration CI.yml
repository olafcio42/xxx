name: PQC Integration CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  pqc-tests:
    name: Run PQC Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      # Build and install liboqs from source
      - name: Build and install liboqs
        run: |
          # Install build dependencies
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build pkg-config

          # Clone liboqs repository
          git clone --depth 1 --branch main https://github.com/open-quantum-safe/liboqs.git
          
          # Build and install liboqs
          cd liboqs
          mkdir build && cd build
          cmake -GNinja -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_SHARED_LIBS=ON ..
          ninja
          sudo ninja install
          
          # Update library cache
          sudo ldconfig
          
          # Create symbolic link for compatibility
          sudo ln -sf /usr/local/lib/liboqs.so.* /usr/local/lib/liboqs.so 2>/dev/null || true
          
          # Verify installation - check for header files
          if [ ! -f "/usr/local/include/oqs/oqs.h" ]; then
            echo "liboqs installation failed - header not found"
            exit 1
          fi
          
          # Verify installation - check for library files (versioned or unversioned)
          if ! ls /usr/local/lib/liboqs.so* 1> /dev/null 2>&1; then
            echo "liboqs installation failed - no library files found"
            echo "Contents of /usr/local/lib:"
            ls -la /usr/local/lib/ | grep -i oqs || echo "No oqs files found"
            exit 1
          fi
          
          # Additional verification using pkg-config if available
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
          if pkg-config --exists liboqs 2>/dev/null; then
            echo "liboqs found via pkg-config: $(pkg-config --modversion liboqs)"
          else
            echo "liboqs not found via pkg-config, but library files exist"
          fi
          
          echo "liboqs installation successful!"
          echo "Installed library files:"
          ls -la /usr/local/lib/liboqs.so* || echo "No liboqs.so files found"

      - name: Run PQC tests
        run: |
          # Set library path to include liboqs
          export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
          
          # Run standard tests (removed --features pqc)
          echo "Running standard test suite..."
          cargo test

      - name: Run PQC benchmarks
        run: |
          # Set library path to include liboqs
          export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
          
          # Run standard benchmarks (removed --features pqc)
          echo "Running benchmark suite..."
          cargo bench

      - name: Test build in release mode
        run: |
          export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
          
          echo "Testing release build..."
          cargo build --release

      - name: Run performance validation
        run: |
          export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
          
          echo "Running performance validation tests..."
          cargo test --release tests::performance_test::tests::test_performance_under_load

      - name: Generate test report
        run: |
          echo "=== PQC Integration CI Report ==="
          echo "Date: $(date -u '+%Y-%m-%d %H:%M:%S') UTC"
          echo "User: olafcio42"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo ""
          echo "All PQC tests completed successfully"
          echo "Benchmarks executed"
          echo "Release build verified"
          echo "Performance validation passed"