# Extended CI/CD Pipeline for Post-Quantum Cryptography (PQC)
name: PQC Integration CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  pqc-tests:
    name: Run PQC Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      # Build and install liboqs from source
      - name: Build and install liboqs
        run: |
          # Install build dependencies
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build

          # Clone liboqs repository
          git clone --depth 1 --branch main https://github.com/open-quantum-safe/liboqs.git
          
          # Build and install liboqs
          cd liboqs
          mkdir build && cd build
          cmake -GNinja -DCMAKE_INSTALL_PREFIX=/usr/local ..
          ninja
          sudo ninja install
          
          # Update library cache
          sudo ldconfig
          
          # Verify installation
          if [ ! -f "/usr/local/include/oqs/oqs.h" ]; then
            echo "liboqs installation failed - header not found"
            exit 1
          fi
          if [ ! -f "/usr/local/lib/liboqs.so" ]; then
            echo "liboqs installation failed - library not found"
            exit 1
          fi

      - name: Run PQC tests
        run: |
          # Set library path to include liboqs
          export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
          cargo test --features pqc

      - name: Run PQC benchmarks
        run: |
          # Set library path to include liboqs
          export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
          cargo bench --features pqc

      # Optional: Cache the built libraries
      - name: Cache liboqs
        uses: actions/cache@v3
        with:
          path: |
            /usr/local/lib/liboqs.so*
            /usr/local/include/oqs
          key: ${{ runner.os }}-liboqs-${{ hashFiles('liboqs/**') }}