# Extended CI/CD Pipeline for Post-Quantum Cryptography (PQC)
# This workflow integrates PQC libraries (e.g., liboqs) and runs tests specific to quantum-resistant algorithms.

name: PQC Integration CI

# Defines when the workflow will run
on:
  push:
    branches: [ main ]  # Triggers on pushes to the main branch
  pull_request:
    branches: [ main ]  # Triggers on pull requests targeting the main branch

jobs:
  pqc-tests:
    name: Run PQC Tests
    runs-on: ubuntu-latest  # Uses the latest Ubuntu runner

    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install Rust toolchain
      # Uses actions-rs/toolchain to set up Rust with minimal profile for faster installation
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal  # Minimal profile for faster setup
          toolchain: stable # Uses stable Rust version

      # Step 3: Install PQC Library (liboqs)
      # Sets up liboqs for testing PQC algorithms
      - name: Install liboqs
        run: |
          sudo apt-get update
          sudo apt-get install -y liboqs-dev

      # Step 4: Run cargo tests for PQC integration
      # Executes tests specific to PQC algorithms
      - name: Run PQC tests
        run: cargo test --features pqc

      # Step 5: Perform benchmarks for PQC algorithms
      # Measures the performance of PQC algorithms
      - name: Run PQC benchmarks
        run: cargo bench --features pqc

# Key Features:
# - Integration of liboqs library for PQC
# - Automated testing of quantum-resistant algorithms
# - Benchmarking for performance analysis
# - Clean and efficient setup for CI/CD pipeline